#{{{防刷策略配置
    limit_conn_zone $binary_remote_addr zone=bag_one_${USER}:10m;
    limit_req_zone $binary_remote_addr zone=bag_addr_${USER}:10m rate=100r/s;
#}}}
server {
    listen 80;
    listen 443 ssl http2;
    server_name ${DOMAIN};

    ssl_certificate          certs/bag.gate.panda.tv.crt;
    ssl_certificate_key      certs/bag.gate.panda.tv.key;
    ssl_trusted_certificate  certs/bag.gate.panda.tv.ca;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_dhparam certs/dhparams.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:DES-CBC3-SHA:HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!SRP';
    ssl_prefer_server_ciphers on;
    resolver 10.110.16.19; #bjac resolver

    #{{{环境变量，暴露给Lua使用
    set $ban_db       '${USER}_pandaren_bandb';
    set $lua_init     '${USER}.${PRJ_KEY}.init';
    set $lua_env_path '${PRJ_ROOT}run/${APP_SYS}/env.lua';
    set $lua_lib_root '${USER}/${PRJ_KEY}';
    set $env '${ENV}';
    #}}}

    set $php_sock     'unix:/var/run/rgapp-${USER}-${PRJ_KEY}-${APP_SYS}/fpm.sock';

    root ${PRJ_ROOT}src/public ;

    set $origin www.panda.tv;

    if ( $http_origin ~ '^https?:\/\/(\w+\.)*panda(\.tv|tv\.com)(:[0-9]+)?$') {
        set $origin $http_origin;
    }

    if ( $http_x_request_id = '' ){
        set $http_x_request_id $msec-$proxy_add_x_forwarded_for-$pid-$request_length;
    }
    add_header 'X-Request-Id' $http_x_request_id;

    add_header 'Access-Control-Allow-Origin' $origin;
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST';
    add_header 'Access-Control-Max-Age' '86400';

    #realip模块取得正确的ip，信任本机和所有内网地址
    set_real_ip_from  127.0.0.1;
    set_real_ip_from  10.110.0.0/16;
    set_real_ip_from  10.120.0.0/16;
    set_real_ip_from  10.131.0.0/16;
    set_real_ip_from  10.130.0.0/16;
    real_ip_header    X-Forwarded-For;
    real_ip_recursive on;

    #前端跨域专用proxy页面
    location = /proxy.html {
        if ( $scheme = http ) {
            echo '<!DOCTYPE html><html><head><title>proxy</title><script src="http://s7.pdim.gs/static/f48d7cc521239cb0/xdomain.js"></script><script>xdomain.masters({"http://*.panda.tv":"*","http://*.pandatv.com":"*"});</script></head><body></body></html>';
        }
        if ( $scheme = https ) {
            echo '<!DOCTYPE html><html><head><title>proxy</title><script src="https://s.ssl.pdim.gs/static/f48d7cc521239cb0/xdomain.js"></script><script>xdomain.masters({"https://*.panda.tv":"*","https://*.pandatv.com":"*"});</script></head><body></body></html>';
        }
    }

    location ~* \.(txt|conf|doc|yaml|py|sh|php)$ {
        rewrite ^/(.*) http://${DOMAIN} permanent;
        deny all;
    }

    location ~ ^/(actions|autoload)/ {
        rewrite ^/(.*) http://${DOMAIN} permanent;
        deny all;
    }

    location ~* /favicon.ico {
        access_log off;
        empty_gif;
    }

    location ~ ^(/api|)/bag/num$ {

        limit_conn bag_one_${USER} 3;  #限定单一 IP 来源的并发连接数为3 遇到恶意刷站时启用
        limit_conn_status 403;
        limit_req zone=bag_addr_${USER} burst=1 nodelay; #限制单一 IP 来源单位时间内连接总数 burst=1：表示允许超过限制的请求数不多于1个，nodelay：超过的请求不会被延迟处理,直接返回403
        limit_req_status 403;
        #default_type 'application/json;charset=utf-8';
        #content_by_lua_file ${PRJ_ROOT}/src/lua/app/bagNum.lua;
        rewrite ^/(.*) /index.php/$1 last;
    }

    location ~ ^(/api|)/bag/gnum$ {
        limit_conn bag_one_${USER} 3;
        limit_conn_status 403;
        limit_req zone=bag_addr_${USER} burst=1 nodelay; #限制单一 IP 来源单位时间内连接总数
        limit_req_status 403;
        rewrite ^/(.*) /index.php/$1 last;
    }
    location = /bag/gnum {
        limit_conn bag_one_${USER} 3;
        limit_conn_status 403;
        limit_req zone=bag_addr_${USER} burst=1 nodelay; #限制单一 IP 来源单位时间内连接总数
        limit_req_status 403;
        rewrite ^/bag/gnum(.*) /api/bag/gnum$1;
    }

    location = /bag/convert {
        limit_conn bag_one_${USER} 3;
        limit_conn_status 403;
        limit_req zone=bag_addr_${USER} burst=1 nodelay; #限制单一 IP 来源单位时间内连接总数
        limit_req_status 403;
        rewrite ^/(.*) /index.php/$1 last;
    }

    location ~ ^(/api|)/bag/wcnum$ {
        limit_conn bag_one_${USER} 3;
        limit_conn_status 403;
        limit_req zone=bag_addr_${USER} burst=1 nodelay; #限制单一 IP 来源单位时间内连接总数
        limit_req_status 403;
        rewrite ^/(.*) /index.php/$1 last;
    }

    location ~ ^(/api|)/bag/get$ {
        limit_conn bag_one_${USER} 3;
        limit_conn_status 403;
        limit_req zone=bag_addr_${USER} burst=1 nodelay; #限制单一 IP 来源单位时间内连接总数
        limit_req_status 403;
        rewrite ^/(.*) /index.php/$1 last;
    }

    location ~ ^(/api|)/bag/take$ {
        limit_conn bag_one_${USER} 3;
        limit_conn_status 403;
        limit_req zone=bag_addr_${USER} burst=1 nodelay;
        limit_req_status 403;
        rewrite ^/(.*) /index.php/$1 last;
    }
    location = /package/get {
        rewrite ^/(.*) /index.php/$1 last;
    }

    location / {
        return 404;
    }

    location ~ .*\.(php|php5)? {
        fastcgi_pass   $php_sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }
}
